apiVersion: apps/v1
kind: Deployment
metadata:
  name: create-contact-deployment
  namespace: messaging
spec:
  replicas: 3
  selector:
    matchLabels:
      app: create-contact
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: create-contact
    spec:
      containers:
        - name: create-contact-ms
          image: oh20/contactmicroservice-create:latest
          ports:
            - containerPort: 80
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_PASSWORD
            - name: RABBITMQ_VHOST
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_VHOST
            - name: SQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sql-connection-secret
                  key: username
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-connection-secret
                  key: password
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1