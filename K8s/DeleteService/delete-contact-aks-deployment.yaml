apiVersion: apps/v1
kind: Deployment
metadata:
  name: contact-delete-deployment
  namespace: messaging
  labels:
    app: contact-delete
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contact-delete
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: contact-delete
    spec:
      containers:
        - name: contact-delete-ms
          image: oh20/contactmicroservice-delete:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_PASSWORD
            - name: RABBITMQ_VHOST
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_VHOST
            - name: SQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sql-connection-secret
                  key: username
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-connection-secret
                  key: password
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1